/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend;


import Backend.Resource.PortResult;
import Backend.ScanPort.ScanPort;
import Frontend.PortResultCellRender;
import java.io.IOException;
import java.util.*;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.atomic.AtomicBoolean;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Admin
 */
public class MainForm extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(MainForm.class.getName());
    AtomicBoolean isScanning = new AtomicBoolean(true);

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        String[] columnNames = {"PORT", "SERVICE", "STATE", "BANNER/INFO"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        tblResult.setModel(model);
        tblResult.setDefaultRenderer(Object.class, new PortResultCellRender());
        
        cbType.removeAllItems();
        cbType.addItem("UDP");
        cbType.addItem("TCP");
        cbType.addItem("Both");
        
        cbxSaveType.removeAllItems();
        cbxSaveType.addItem("Text file | *.txt");
        cbxSaveType.addItem("JSOn file | *.json");
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtStatus = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPing = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTarget = new javax.swing.JTextField();
        btnWHOISLookup = new javax.swing.JButton();
        btnExportFile = new javax.swing.JButton();
        cbxSaveType = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        txtSummary2 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtSummary1 = new javax.swing.JTextField();
        txtSummary3 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResult = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtIP = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cbType = new javax.swing.JComboBox<>();
        btnStart = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        btnScheduleScan = new javax.swing.JButton();
        btnLoadIPList = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(244, 246, 248));

        jLabel1.setFont(new java.awt.Font("UTM Impact", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 120, 212));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(" NETWORK SECURITY SCANNER  ");
        jLabel1.setToolTipText("");

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setName(""); // NOI18N

        txtStatus.setName("txtStauts"); // NOI18N

        jLabel8.setText("Ping Result:");

        txtPing.setName("txtPingResult"); // NOI18N

        jLabel7.setText("Target:");

        jLabel6.setText("Status:");

        txtTarget.setName("txtTarget"); // NOI18N

        btnWHOISLookup.setText("WHOIS Lookup");
        btnWHOISLookup.setName("btnWHOISLookup"); // NOI18N
        btnWHOISLookup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWHOISLookupActionPerformed(evt);
            }
        });

        btnExportFile.setForeground(new java.awt.Color(41, 128, 185));
        btnExportFile.setText("Export File");
        btnExportFile.setName("btnExportCSV"); // NOI18N
        btnExportFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportFileActionPerformed(evt);
            }
        });

        cbxSaveType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSave.setBackground(new java.awt.Color(33, 150, 243));
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.setName("btnSave"); // NOI18N

        txtSummary2.setName("txtSummary2"); // NOI18N

        jLabel9.setText("Summary:");

        txtSummary1.setName("txtSummary1"); // NOI18N

        txtSummary3.setName("txtSummary3"); // NOI18N

        tblResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "PORT", "SERVICE", "STATE", "BANNER / INFO"
            }
        ));
        tblResult.setGridColor(new java.awt.Color(204, 204, 204));
        tblResult.setRowHeight(25);
        tblResult.setShowHorizontalLines(true);
        jScrollPane1.setViewportView(tblResult);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSummary1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(txtSummary2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(txtSummary3))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(44, 44, 44)
                        .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(txtTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(txtPing))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxSaveType, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExportFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnWHOISLookup)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(txtTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtPing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtSummary1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSummary2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSummary3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnWHOISLookup)
                    .addComponent(btnExportFile)
                    .addComponent(cbxSaveType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(230, 242, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Scan Options"));
        jPanel2.setToolTipText("");

        jLabel3.setForeground(new java.awt.Color(0, 51, 102));
        jLabel3.setText("IP / Domain :");

        txtIP.setName("txtIP"); // NOI18N

        jLabel4.setForeground(new java.awt.Color(0, 51, 102));
        jLabel4.setText("Scan Type :");

        cbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbType.setName("xbType"); // NOI18N

        btnStart.setBackground(new java.awt.Color(76, 175, 80));
        btnStart.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnStart.setForeground(new java.awt.Color(255, 255, 255));
        btnStart.setText("Start");
        btnStart.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnStart.setName("btnStart"); // NOI18N
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnStop.setBackground(new java.awt.Color(231, 76, 60));
        btnStop.setForeground(new java.awt.Color(255, 255, 255));
        btnStop.setText("Stop");
        btnStop.setToolTipText("");
        btnStop.setName("btnStop"); // NOI18N
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        btnScheduleScan.setText("Scan IP in Range");
        btnScheduleScan.setName("btnScheduleScan"); // NOI18N
        btnScheduleScan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScheduleScanActionPerformed(evt);
            }
        });

        btnLoadIPList.setText("Load IP List");
        btnLoadIPList.setName("txtLoadIPList"); // NOI18N
        btnLoadIPList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadIPListActionPerformed(evt);
            }
        });

        jProgressBar1.setForeground(new java.awt.Color(153, 255, 153));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIP, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnScheduleScan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLoadIPList)
                        .addContainerGap(94, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnScheduleScan)
                    .addComponent(btnLoadIPList))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnStop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnStart))
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnScheduleScanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScheduleScanActionPerformed
        // TODO add your handling code here:
        new ScanIPinRange().setVisible(true);
    }//GEN-LAST:event_btnScheduleScanActionPerformed

    private void btnLoadIPListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadIPListActionPerformed
        // TODO add your handling code here:
        javax.swing.JFileChooser chooser = new javax.swing.JFileChooser();
        chooser.setDialogTitle("Chọn file danh sách IP");
        int result = chooser.showOpenDialog(this);

        if (result == javax.swing.JFileChooser.APPROVE_OPTION) {
            java.io.File file = chooser.getSelectedFile();
            try {
                java.util.List<String> lines = java.nio.file.Files.readAllLines(file.toPath());
                javax.swing.JOptionPane.showMessageDialog(this, 
                        "Đã tải " + lines.size() + " địa chỉ IP từ file:\n" + file.getName());
            } catch (Exception e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Lỗi khi đọc file: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnLoadIPListActionPerformed

    private int countTotalPorts(List<PortResult> results) {
        return results != null ? results.size() : 0;
    }

    private int countOpenPorts(List<PortResult> results) {
        int count = 0;
        for (PortResult r : results) {
            if ("open".equalsIgnoreCase(r.getState())) {
                count++;
            }
        }
        return count;
    }
    
    private int countClosedPorts(List<PortResult> results) {
        int count = 0;
        for (PortResult r : results) {
            if ("closed".equalsIgnoreCase(r.getState())) {
                count++;
            }
        }
        return count;
    }

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // TODO add your handling code here:
        String target = txtIP.getText().trim();
        String scanType = (String) cbType.getSelectedItem();
        int startPort = 1;
        int endPort = 1024;
        int poolSize = 50;
        int timeoutMs = 200;
        isScanning.set(true);
        
        if (target.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Vui lòng nhập IP hoặc Domain!");
            return;
        }

        txtStatus.setText("Đang quét...");
        txtTarget.setText(target);

        new Thread(() -> {
            try {
                jProgressBar1.setValue(0);
                for (int i = 0; i <= 100; i += 10) {
                    Thread.sleep(150);
                    jProgressBar1.setValue(i);
                }

                txtPing.setText("Ping thành công đến " + target);

                ScanPort scanner = new ScanPort(startPort, endPort, target, scanType, poolSize, timeoutMs, isScanning);
                List<PortResult> results = scanner.ScanProcess();
                results.sort(Comparator.comparingInt(PortResult::getPort));
                
                DefaultTableModel model = (DefaultTableModel) tblResult.getModel();
                model.setRowCount(0); // Xóa dữ liệu cũ

                int openCount = 0;
                int closedCount = 0;

                for (PortResult r : results) {
                    String state = r.getState(); // "open", "closed", v.v.
                    String service = r.getService() != null ? r.getService() : "-";
                    String banner = r.getBanner() != null ? r.getBanner() : "-";

                    model.addRow(new Object[]{
                        target + "/" + r.getPort(),
                        service,
                        state,
                        banner
                    });

                    if ("open".equalsIgnoreCase(state)) openCount++;
                    else closedCount++;
                }

                int total = countTotalPorts(results);
                int open = countOpenPorts(results);
                int closed = countClosedPorts(results);
                
                txtStatus.setText("Hoàn tất quét (" + scanType + ")");
                txtSummary1.setText(total + " ports");
                txtSummary2.setText(open + " open");
                txtSummary3.setText(closed + " closed");
                System.out.println("Tổng số kết quả: " + results.size());
            } catch (InterruptedException e) {
                txtStatus.setText("Đã dừng");
            } catch (IOException ex) {
                System.getLogger(MainForm.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
            } catch (ExecutionException ex) {
                System.getLogger(MainForm.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
            }
        }).start();
        
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        // TODO add your handling code here:
        isScanning.set(false);
        txtStatus.setText("Đã dừng quét");
        jProgressBar1.setValue(0);
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnExportFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportFileActionPerformed
        // TODO add your handling code here:
        new ExportFile().setVisible(true);
    }//GEN-LAST:event_btnExportFileActionPerformed

    private void btnWHOISLookupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWHOISLookupActionPerformed
        // TODO add your handling code here:
        new WHOISLookup().setVisible(true);
    }//GEN-LAST:event_btnWHOISLookupActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new MainForm().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportFile;
    private javax.swing.JButton btnLoadIPList;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnScheduleScan;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JButton btnWHOISLookup;
    private javax.swing.JComboBox<String> cbType;
    private javax.swing.JComboBox<String> cbxSaveType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblResult;
    private javax.swing.JTextField txtIP;
    private javax.swing.JTextField txtPing;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtSummary1;
    private javax.swing.JTextField txtSummary2;
    private javax.swing.JTextField txtSummary3;
    private javax.swing.JTextField txtTarget;
    // End of variables declaration//GEN-END:variables
}
